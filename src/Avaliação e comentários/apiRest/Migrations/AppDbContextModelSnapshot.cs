// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiRest.Models;

#nullable disable

namespace apiRest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            // Tabela Usuarios
            modelBuilder.Entity("apiRest.Models.Usuario", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Usuarios");
            });

            // Tabela Avaliacoes
            modelBuilder.Entity("apiRest.Models.Avaliacao", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Descricao")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Nota")
                    .HasColumnType("int");

                b.Property<int>("UsuarioId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("UsuarioId");

                b.ToTable("Avaliacoes");
            });

            // Tabela Comentarios
            modelBuilder.Entity("apiRest.Models.Comentario", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Texto")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("AvaliacaoId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("AvaliacaoId");

                b.ToTable("Comentarios");
            });

            // Relacionamentos

            modelBuilder.Entity("apiRest.Models.Avaliacao", b =>
            {
                b.HasOne("apiRest.Models.Usuario", "Usuario")
                    .WithMany("Avaliacoes")
                    .HasForeignKey("UsuarioId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Usuario");
            });

            modelBuilder.Entity("apiRest.Models.Comentario", b =>
            {
                b.HasOne("apiRest.Models.Avaliacao", "Avaliacao")
                    .WithMany("Comentarios")
                    .HasForeignKey("AvaliacaoId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Avaliacao");
            });

            modelBuilder.Entity("apiRest.Models.Usuario", b =>
            {
                b.Navigation("Avaliacoes");
            });

            modelBuilder.Entity("apiRest.Models.Avaliacao", b =>
            {
                b.Navigation("Comentarios");
            });
#pragma warning restore 612, 618
        }
    }
}
